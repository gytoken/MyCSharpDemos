using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConsoleApplication47
{
    public delegate string DemoEventHandler(int num);

    public class Publisher
    {
        public event DemoEventHandler NumberChanged;

        public List<string> DoSomething()
        {
            List<string> strList = new List<string>();
            if (NumberChanged == null)
                return strList;
            Delegate[] delArray = NumberChanged.GetInvocationList();
            foreach (Delegate del in delArray)
            {
                DemoEventHandler method = (DemoEventHandler)del;
                strList.Add(method(100));
            }
            return strList;
        }
    }

    public class Subscriber1
    {
        public string OnNumberChanged(int num)
        {
            Console.WriteLine("Subscriber1 Invoked,number:{0}",num);
            return "[Subscriber1 returned]";
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Publisher pub = new Publisher();
            Subscriber1 sub1 = new Subscriber1();

            pub.NumberChanged += sub1.OnNumberChanged;
            List<string> list = pub.DoSomething();
            foreach (string str in list)
            {
                Console.WriteLine(str);
            }
            Console.ReadLine();
        }
    }
}
